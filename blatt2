#include<iostream>
using namespace std;
#include <vector> //done
#include<map>  //done
#include<set>//done
#include<list>//done
#include<array>//done
#include <utility>//done
using std::pair;
using std::make_pair;
#include<tuple>//done;
using std::tuple;
using std::make_tuple;
using std::get;
#include<stack>//done
using std::stack;
using std::cout;
// notyen mit if done
// vector1 +vector 2 done
//range for lops done
//switch +case done
//atm bank maschen
#include<string>
#include <thread> // slepp for a second;
using std::string;

int balance = 1000;
int deposit = 0;
int withdraw = 0;
int password = 1234 ;
int choice = 0;

void show() {
    cout << "####### menu #########" << endl;
    cout << "1: balance" << endl;
    cout << "2: deposit" << endl;
    cout << "3 :withdraw" << endl;
    cout << "4 :exit " << endl;
}
void work() {

    char option = 'o';
    cout << "Enter your password: ";
    cin >> password;

    std::cout << "loding..." << std::endl;
    std::this_thread::sleep_for(std::chrono::seconds(3));

        while (password != 1111) {
        cout << "Your password is incorrect. Do you want to try again? Enter 'y' or 'n': ";
        cin >> option;

            std::cout << "loding..." << std::endl;
            std::this_thread::sleep_for(std::chrono::seconds(3));

        if (option == 'n') {
            cout << "Goodbye!" << endl;
            return; // Exit the function
        }
        cout << "Enter your password: ";
        cin >> password;

            std::cout << "loding..." << std::endl;
            std::this_thread::sleep_for(std::chrono::seconds(3));
    }


    do {
        show();
        cout << "Enter your choice: ";
        cin >> choice;
        std::cout << "loding..." << std::endl;
        std::this_thread::sleep_for(std::chrono::seconds(3));

        switch (choice) {
            case 1:
                cout << "Your balance is: " << balance << endl;
                std::cout << "loding..." << std::endl;
                std::this_thread::sleep_for(std::chrono::seconds(3));
                break;
            case 2:
                cout << "Welcome! Your current balance is: " << balance << endl;
                cin >> deposit;
                std::cout << "loding..." << std::endl;
                std::this_thread::sleep_for(std::chrono::seconds(3));
                cout << "Your new balance is: " << balance + deposit << endl;
                break;
            case 3:
                cout << "Welcome! Your current balance is: " << balance << endl;
                cout << "How much do you want to withdraw? ";
                cin >> withdraw;
                std::cout << "loding..." << std::endl;
                std::this_thread::sleep_for(std::chrono::seconds(5));

                if (withdraw > balance) {
                    cout << "Sorry, you don't have enough money." << endl;
                } else {
                    balance -= withdraw;
                    cout << "Now, your balance is: " << balance << endl;
                }
                break;
            case 4:
                cout << "Thank you, see you next time!" << endl;
                cout<<"----------- dont forget your card -------------------";
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
                break;
        }

    } while (choice != 4);
}

int main() {
    show();
    work();

    return 0;
}-

